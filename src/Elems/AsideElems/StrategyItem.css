
 /* Checkbox positioning */
.StrategyList {
   /*
   These variables were moved from .StrategyItem

   The checkbox needs to be --item-height
   This impacts the strategy list, since the padding-left must account for the checkbox
   */
   --item-height: var(--font-size); /* see App.css */

   position: relative;
   max-width: initial;
   padding-left: calc(2rem + var(--item-height));
}

/* Sidenote discovery: Google Chrome doesn't know that 0 is a valid <length> when using max() */
.StrategyItem {
   --label-width: 80%; /* For status */
   --status-width: 20%; /* For status */
   --padding: 1.5rem;

   padding-left: var(--padding);

   /* But this is for list item positioning */
   line-height: calc(var(--item-height) + 0.1rem);

   /* Making room for status */
   min-width: calc(var(--label-width) + var(--status-width));
   max-width: calc(100% - var(--padding));
}

.StrategyToggler {
   position: absolute;
   left: -1rem;
   margin: 0; /* Now sanitize.css works! */
   text-align: center;
   line-height: inherit;

   width: var(--item-height);
   height: var(--item-height);
}

@supports selector(:dir(rtl)) {
   .StrategyList:dir(rtl) {
      padding-left: initial;
      padding-right: calc(2rem + var(--item-height));
   }

   .StrategyItem:dir(rtl) {
      padding-left: initial;
      padding-right: var(--padding);
   }

   .StrategyToggler:dir(rtl) {
      left: initial;
      right: 0;
   }
}

@supports not selector(:dir(rtl)) {
   [dir=rtl] .StrategyList {
      padding-left: initial;
      padding-right: calc(2rem + var(--item-height));
   }

   [dir=rtl] .StrategyItem {
      padding-left: initial;
      padding-right: var(--padding);
   }

   [dir=rtl] .StrategyToggler {
      left: initial;
      right: 0;
   }
}

/* Label structure: Name Status */
.StrategyLabel {
   width: var(--label-width);
   display: inline-grid; /* Still inline but behaves like a block element */

   /*
      Right now this doesn't do anything, (besides display)
      since the StrategyLabel doesn't contain a tooltip anymore.

      This would make more sense in a parent "StrategyItemContent" span
      As of right now, the "StrategyStatus" are aligned by the constant width.

      align-content: center;
      display: inline-grid;
      grid-template-columns: 3fr 1fr;
      grid-template-areas:
        'name status';
    */
}

/* Result */
.StrategyResult {
   grid-area: status;
}

.StrategyResult.success {
   color: var(--light-green);
}

.StrategyResult.fail {
   color: var(--orange);
}

.StrategyResult.error {
   color: var(--red);
}
